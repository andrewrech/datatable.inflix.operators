% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dt.inflix.R
\name{chunk}
\alias{chunk}
\title{Data.table::split but with aggregate "chunks".}
\usage{
chunk(dt, fun, by, cl = parallel::detectCores())
}
\arguments{
\item{dt}{A data.table.}

\item{fun}{Monadic data table function to use on chunks. Function must return a data table of columns to add and column \code{.chunk_id}, an index created by \code{chunk}. The returned table must be the same \code{nrow} as the input table.

Example function:\if{html}{\out{<div class="r">}}\preformatted{ .fn <- function(dt)\{
   print("start")
    dt[, uuid := full_name \%>\%
       stringr::str_extract("[a-z0-9]\{8\}-[a-z0-9]\{4\}-[a-z0-9]\{4\}-[a-z0-9]\{4\}-[a-z0-9]\{12\}")]

   return(dt[, .SD, .SDcols = c("uuid", ".chunk_id")])

 \}
```r

[, .SD, .SDcols = c("uuid", ".chunk_id")]: R:,\%20.SD,\%20.SDcols\%20=\%20c(\%22uuid\%22,\%20\%22.chunk_id\%22)
}\if{html}{\out{</div>}}}

\item{by}{Column to chunk by.}

\item{cl}{Number of chunks.}
}
\value{
\code{cl} data.table chunks with \code{by} split exclusively. The data table returned has new columns called \code{.id}, the default by parameter of non was specified, and .vec_chunk, the assignment in \code{cl}.
}
\description{
\code{chunk} performs \code{data.table::split} for a column and then applies \code{fun} on resultant each chunk. The purpose of this function is to parallelize over \code{by} more efficiently when \code{by} >> \code{cl}. For instance, this can occur when performing non-trivial, non-vectorized calculations row-wise.
}
